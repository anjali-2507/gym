"use strict";(()=>{var e={};e.id=694,e.ids=[694],e.modules={38013:e=>{e.exports=require("mongodb")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},74716:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>D,patchFetch:()=>v,requestAsyncStorage:()=>h,routeModule:()=>g,serverHooks:()=>x,staticGenerationAsyncStorage:()=>f});var n={};o.r(n),o.d(n,{GET:()=>d,dynamic:()=>p});var a=o(49303),r=o(88716),s=o(60670),c=o(87070),i=o(38013);let u=process.env.MONGODB_URI||"",l={serverSelectionTimeoutMS:5e3,connectTimeoutMS:1e4};async function m(){console.log("Attempting to connect to MongoDB...");let e=new i.MongoClient(u,l);return await e.connect(),console.log("Successfully connected to MongoDB"),e}let p="force-dynamic";async function d(e){let t=null;try{let e=(t=await m()).db("momDatas"),o=await e.collection("datamoms").find({}).toArray();return console.log(`Retrieved ${o.length} documents from the database`),c.NextResponse.json({success:!0,message:"Data fetched Successfully",data:o},{status:200})}catch(t){console.error("Error in Fetching",t);let e="Error in Fetching";return t instanceof Error&&(e+=": "+t.message),c.NextResponse.json({success:!1,message:e},{status:500})}finally{t&&(await t.close(),console.log("MongoDB connection closed"))}}let g=new a.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/momDatas/route",pathname:"/api/momDatas",filename:"route",bundlePath:"app/api/momDatas/route"},resolvedPagePath:"D:\\Gym-Dashboard-main\\app\\api\\momDatas\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:h,staticGenerationAsyncStorage:f,serverHooks:x}=g,D="/api/momDatas/route";function v(){return(0,s.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:f})}},49303:(e,t,o)=>{e.exports=o(30517)}};var t=require("../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),n=t.X(0,[948,70],()=>o(74716));module.exports=n})();