"use strict";(()=>{var e={};e.id=324,e.ids=[324],e.modules={38013:e=>{e.exports=require("mongodb")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},94912:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>h,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>v,staticGenerationAsyncStorage:()=>x});var n={};r.r(n),r.d(n,{POST:()=>p});var s=r(49303),a=r(88716),i=r(60670),o=r(87070),u=r(38013);let d=process.env.MONGODB_URI||"",c={serverSelectionTimeoutMS:5e3,connectTimeoutMS:1e5};async function l(){let e=new u.MongoClient(d,c);return await e.connect(),e}async function p(e){let t=null;try{let r=(t=await l()).db("Gym_Management").collection("clients"),{clientName:n,clientNumber:s,role:a}=await e.json();if(!n||!s||!a)return o.NextResponse.json({success:!1,message:"All fields are required"},{status:400});let i={clientName:n,clientNumber:s,role:a},u=await r.insertOne(i);return o.NextResponse.json({success:!0,message:"Client added successfully",data:{_id:u.insertedId,...i}},{status:201})}catch(e){return console.error("Error adding client:",e),o.NextResponse.json({success:!1,message:"Error adding client"},{status:500})}finally{t&&await t.close()}}let m=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/addclient/route",pathname:"/api/addclient",filename:"route",bundlePath:"app/api/addclient/route"},resolvedPagePath:"D:\\Gym-Dashboard-main\\app\\api\\addclient\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:g,staticGenerationAsyncStorage:x,serverHooks:v}=m,f="/api/addclient/route";function h(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:x})}},49303:(e,t,r)=>{e.exports=r(30517)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[948,70],()=>r(94912));module.exports=n})();